/* General CSS Rules*/
body {
    font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace;
    font-size: 12px;
    background: #f8f8f8;
    padding: 0;
    margin: 0;
}

div#page-container {
    height: 100vh;
    display: flex;
    flex-direction: column;
}

a,
a:hover,
a:visited,
a:active {
    color: inherit;
    text-decoration: none;
}

b {
    font-weight: normal;
}

table {
    font-size: 12px;
}

/* Visualization tabs */
div#visualization-tabs {
    display: flex;
    flex-grow: 1;
    width: 100%;
    height: 100%;
}

div.tab {
    overflow: scroll;
    position: relative;
    flex-grow: 1;
}

div#ir-code-tab {
    counter-reset: line;
    padding-left: 50px;
    padding-top: 20px;
}

div#assembly-tab {
    min-width: 350px;
    max-width: 30vw;
}

button#highlight-button {
  margin: 0.4em;
  padding: 0.5em;
  border-radius: 4px;
}


/* Resize bars */
div.resize-bar {
    background: rgb(201, 231, 190);
    cursor: col-resize;
    border-left: 1px solid rgb(0, 0, 0);
    border-right: 1px solid rgb(0, 0, 0);

    > div.collapse-btns {
        position: relative;
        top: 50%;
        margin: 0px;

        & button:hover {
            background-color: rgba(255, 255, 255, 0.5);
        }

        & i.bi-arrow-bar-left:before { content: "<"; }
        & i.bi-arrow-bar-right:before { content: ">"; }
    }
}


button.resize-btn {
    margin: 10px 3px;
    font-size: 18px;
}

/* IR Code Section CSS */
.ModuleBody {
    padding-left: 42px !important;
}
div.conceptual .ModuleBody {
    /* With conceptual IR, the indent is not big enough, as we are missing one extra level from the functions. */
    padding-left: 55px !important;
}

div.Function, div.Buffer {
    padding-top: 0.6em;
    padding-bottom: 0.6em;
    padding-left: 1.6em;
    padding-right: 1.6em;
    border-radius: 6px;
    margin-right: 1.0em;
}
div.Function + div.Function {
    margin-top: 1.5em; /* Leave space between two functions. */
}

/* Give functions a slightly different background color to visually help navigate quickly. */
div.Function:nth-child(3n + 1) { background-color: rgba(200, 0, 0, 0.025); }
div.Function:nth-child(3n + 2) { background-color: rgba(0, 200, 0, 0.025); }
div.Function:nth-child(3n + 3) { background-color: rgba(0, 0, 200, 0.025); }

/* Give Parallel fors a different color */
div.For.for-type-parallel { background-color: rgba(200, 200, 0, 0.03); margin: 0.5em; }
div.For.for-type-gpu_block { background-color: rgba(200, 200, 0, 0.03); margin: 0.5em; }

b.Highlight {
    font-weight: bold;
    background-color: #DDD;
}

span.Highlight {
    font-weight: bold;
    background-color: #FF0;
}

span.OpF32 {
    color: hsl(106deg 100% 40%);
    font-weight: bold;
}

span.OpF64 {
    color: hsl(106deg 100% 30%);
    font-weight: bold;
}

span.OpB8 {
    color: hsl(208deg 100% 80%);
    font-weight: bold;
}

span.OpB16 {
    color: hsl(208deg 100% 70%);
    font-weight: bold;
}

span.OpB32 {
    color: hsl(208deg 100% 60%);
    font-weight: bold;
}

span.OpB64 {
    color: hsl(208deg 100% 50%);
    font-weight: bold;
}

span.OpI8 {
    color: hsl(46deg 100% 45%);
    font-weight: bold;
}

span.OpI16 {
    color: hsl(46deg 100% 40%);
    font-weight: bold;
}

span.OpI32 {
    color: hsl(46deg 100% 34%);
    font-weight: bold;
}

span.OpI64 {
    color: hsl(46deg 100% 27%);
    font-weight: bold;
}

span.OpVec2 {
    background-color: hsl(100deg 100% 90%);
    font-weight: bold;
}

span.OpVec4 {
    background-color: hsl(100deg 100% 80%);
    font-weight: bold;
}

span.Memory {
    color: #d22;
    font-weight: bold;
}

span.Pred {
    background-color: #ffe8bd;
    font-weight: bold;
}

span.Label {
    background-color: #bde4ff;
    font-weight: bold;
}

/* Collapse button and indent div logic */
input.show-hide-btn {
    appearance: none;
    margin-left: -17px;
    margin-top: 0px;
    margin-bottom: 0px;
    padding: 0;
    height: 14px;
    vertical-align: top;

    &:before {
        content: "-";
        font-size: 15px;
        width: 14px;
        height: 14px;
        box-sizing: border-box;
        text-anchor: middle;
        line-height: 9px;
        display: inline-block;
        border: 1px solid black;
        border-radius: 4px;
        text-align: center;
        padding: 0;
        margin: 0;
        overflow: hidden;
    }

    &:checked:before {
        content: "+";
        font-size: 10px;
        line-height: 11px;
    }
}


div.indent {
    box-sizing: border-box;
    border-left: 2px solid transparent;
    padding-left: 25px;
    margin-left: -11px;
}

input.show-hide-btn:hover {
    color: #c30000;
}

/* The structure always has to be <button/><label/><div>...</div>.
 * All the random buttons, should go in the label.
 */
input.show-hide-btn + label + div.indent {
    max-height: 10000000000px;
    overflow: hidden;
    opacity: 1;
    transition: opacity 0.4s, max-height 0.4s;
    border-left: 2px solid transparent;
}

/* TODO: add the same logic for hoving the closing brace. */
input.show-hide-btn:hover + label + div.indent {
    border-left: 2px dotted black;
}
input.show-hide-btn:hover + label > span:last-child,
input.show-hide-btn:hover + label + div.indent + span.ClosingBrace {
    font-weight: bold;
}
input.show-hide-btn:hover + label + div.indent + span.ClosingBrace:after {
    height: 7px;
    width: 7px;
    display: inline-block;
    border-bottom: 2px dotted black;
    border-left: 2px dotted black;
    position: relative;
    left: -18px;
    content: " ";
}

input.show-hide-btn:checked + label + div.indent {
    opacity: 0;
    max-height: 0px;
}
input.show-hide-btn:checked + label > span:last-child:after {
    content: "(collapsed)";
    margin-left: 1em;
    font-style: italic;
    color: gray;
}

button.icon-btn {
    padding: 0;
    margin-left: 2px;
    margin-right: 2px;
    width: 14px;
    height: 14px;
    vertical-align: middle;
    background: transparent;
    font-size: 10px;
    border: 1px solid black;
    border-radius: 4px;

    :before {
        margin: 0;
        padding: 0;
        border: 0;
        color: black;
        display: inline-block;
    }
}

button.jump-to-asm-btn:before, button.jump-to-viz-btn:before {
    content: ">";
}

div#ir-visualization-tab button.icon-btn {
    margin-left: 1px;
}

button.icon-btn:hover {
    color: #c30000;
}

code.ptx {
    tab-size: 26;
    white-space: pre;
}

span.comment {
    color: #998;
    font-style: italic;
}

span.keyword {
    color: #333;
    font-weight: bold;
}

span.IntImm {
    color: #099;
}

span.UIntImm {
    color: #099;
}

span.FloatImm {
    color: #099;
}

span.StringImm {
    color: #d14;
}

span.Type {
    color: #445588;
    font-weight: bold;
}

span.Symbol {
    color: #990073;
}

span.Assign {
    color: #d14;
    font-weight: bold;
}

div.WrapLine {
    margin-left: 30px;
    text-indent: -30px;
}

span.IfSpan,
span.ClosingBrace,
div.WrapLine,
div.Consumer,
div.Produce,
div.For,
div.Evaluate,
div.Allocate,
div.Function,
div.Buffer,
div.Evaluate {
    counter-increment: line;
    &:before {
        font-weight: normal;
        content: counter(line) '. ';
        display: inline-block;
        position: absolute;
        left: 0px;
        width: 50px;
        text-align: right;
        color: rgb(175, 175, 175);
        user-select: none;
        -webkit-user-select: none;
    }
}

.collapsed-block {
    position: absolute;
    left: -9999px;
    max-height: 0px;
    overflow: hidden;
    opacity: 0;
}


span.tooltip {
    opacity: 1;
    visibility: hidden;
    position: absolute;
    left: 50px;
    top: -10px;
    width: max-content;
    padding: 8px;
    background: #fff7e0;
    font-size: 12px;
    border-radius: 5px;
    border: 1px solid #aaa;
    z-index: 9999;
    box-shadow: rgba(100, 100, 100, 0.8) 0 2px 5px 0;
    text-indent: 0px;
}

.tooltip-parent:hover span.tooltip {
    visibility: visible;
}

/* Cost model */

div.node-cost {
    position: absolute;
    left: 52px; /* Enough for 4 digit line counter. */
}
div.cost-btn {
    width: 10px;
    height: 10px;
    margin-top: 0px;
    border: 1px solid rgba(0,0,0,0.1);
    position: relative;
    float: left;
    margin-right: 3px;
}
div.cost-btn:hover {
    cursor: pointer;
    border: 1px solid lightgray;
}


.CostColor19 { background-color: rgb(130,  31, 27); }
.CostColor18 { background-color: rgb(145,  33, 30); }
.CostColor17 { background-color: rgb(160,  33, 32); }
.CostColor16 { background-color: rgb(176,  34, 34); }
.CostColor15 { background-color: rgb(185,  47, 32); }
.CostColor14 { background-color: rgb(193,  59, 30); }
.CostColor13 { background-color: rgb(202,  71, 27); }
.CostColor12 { background-color: rgb(210,  82, 22); }
.CostColor11 { background-color: rgb(218,  93, 16); }
.CostColor10 { background-color: rgb(226, 104,  6); }
.CostColor9  { background-color: rgb(229, 118,  9); }
.CostColor8  { background-color: rgb(230, 132, 15); }
.CostColor7  { background-color: rgb(231, 146, 20); }
.CostColor6  { background-color: rgb(232, 159, 25); }
.CostColor5  { background-color: rgb(233, 172, 30); }
.CostColor4  { background-color: rgb(233, 185, 35); }
.CostColor3  { background-color: rgb(233, 198, 40); }
.CostColor2  { background-color: rgb(232, 211, 45); }
.CostColor1  { background-color: rgb(231, 223, 50); }
.CostColor0  { background-color: rgb(236, 233, 89); }

/* Below is the style for the Syntax Highlighting with speed-highlight.
 * It's adapted from the default style from: https://unpkg.com/@speed-highlight/core@1.1.11/dist/themes/default.css
 */
[class*=shj-lang-]{
    white-space:pre;
    background:white;
    color:#112;
    box-shadow:0 0 5px #0001;
    text-shadow:none;
    font: 12px Consolas,Courier New,Monaco,Andale Mono,Ubuntu Mono,monospace;
    line-height:14px;
    box-sizing:border-box;
}
.shj-inline{
    margin:0;
    padding:2px 5px;
    display:inline-block;
    border-radius:5px
}
[class*=shj-lang-]::selection,[class*=shj-lang-] ::selection{
    background:#bdf5
}
[class*=shj-lang-]>div{
    display:flex;
    overflow:auto
}
[class*=shj-lang-]>div :last-child{
    flex:1;
    outline:none
}
.shj-numbers{
    padding-left:5px;
    counter-reset:line
}
.shj-numbers div{
    padding-right:5px;
     width:0;
}
.shj-numbers div:before{
    color:#999;
    display:block;
    content:counter(line);
    opacity:.5;
    text-align:right;
    margin-right:5px;
    counter-increment:line;
    width:5em;
}
.shj-syn-cmnt{
    font-style:italic
}
.shj-syn-err,.shj-syn-kwd{
    color:#e16
}
.shj-syn-num,.shj-syn-class{
    color:#f60
}
.shj-numbers,.shj-syn-cmnt{
    color:#999
}
.shj-syn-insert,.shj-syn-str{
    color:#7d8
}
.shj-syn-bool{
    color:#3bf
}
.shj-syn-type,.shj-syn-oper{
    color:#5af
}
.shj-syn-section,.shj-syn-func{
    color:#84f
}
.shj-syn-deleted,.shj-syn-var{
    color:#f44
}
.shj-oneline{
    padding:12px 10px
}
.shj-lang-http.shj-oneline .shj-syn-kwd{
    background:#25f;
    color:#fff;
    padding:5px 7px;
    border-radius:5px
}
.shj-multiline.shj-mode-header{
    padding:20px
}
.shj-multiline.shj-mode-header:before{
    content:attr(data-lang);
    color:#58f;
    display:block;
    padding:10px 20px;
    background:#58f3;
    border-radius:5px;
    margin-bottom:20px
}

